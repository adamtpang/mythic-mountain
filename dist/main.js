/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_puppeteer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/puppeteer.js */ \"./src/scripts/puppeteer.js\");\n\nwindow.onload = function () {\n  const puppeteer = new _scripts_puppeteer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    element: document.querySelector(\".game-container\")\n  });\n  puppeteer.init();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBK0M7QUFFL0NDLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLFlBQVk7RUFDM0IsTUFBTUMsU0FBUyxHQUFHLElBQUlILDZEQUFTLENBQUM7SUFDL0JJLE9BQU8sRUFBRUMsUUFBUSxDQUFDQyxhQUFhLENBQUMsaUJBQWlCO0VBQ2xELENBQUMsQ0FBQztFQUNGSCxTQUFTLENBQUNJLElBQUksQ0FBQyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teXRoaWMtbW91bnRhaW4vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHVwcGV0ZWVyIGZyb20gXCIuL3NjcmlwdHMvcHVwcGV0ZWVyLmpzXCI7XG5cbndpbmRvdy5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG5cdGNvbnN0IHB1cHBldGVlciA9IG5ldyBQdXBwZXRlZXIoe1xuXHRcdGVsZW1lbnQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2FtZS1jb250YWluZXJcIiksXG5cdH0pO1xuXHRwdXBwZXRlZXIuaW5pdCgpO1xufTtcbiJdLCJuYW1lcyI6WyJQdXBwZXRlZXIiLCJ3aW5kb3ciLCJvbmxvYWQiLCJwdXBwZXRlZXIiLCJlbGVtZW50IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaW5pdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/battleHUD.js":
/*!**********************************!*\
  !*** ./src/scripts/battleHUD.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BattleHUD; }\n/* harmony export */ });\n// takes care of the battle's visual HUD instance and updations\n\n// what is the problem?\n// the battlehud is being rendered twice, so the current battle's hud is being rendered under the previous battle's hud\n\n// should handle all the visual elements of the battle on the HUD\nclass BattleHUD {\n  constructor(battle) {\n    this.battle = battle;\n    this.player = battle.player;\n    this.enemy = battle.enemy;\n    this.InitialHPWidth = 260;\n  }\n\n  // init and destroy\n  init() {\n    // find the hud container\n    const hudContainer = document.querySelector(\".hud-container\");\n\n    // create a hud\n    const hud = this.createElement(\"div\", {\n      className: \"HUD\"\n    });\n\n    // create the 4 rectangles\n    const playerHUD = this.createTeamHUD(\"player\");\n    const dialogueBox = this.createDialogueBox();\n    const moveMenu = this.createMoveMenu();\n    const enemyHUD = this.createTeamHUD(\"enemy\");\n\n    // append them to the hud found above\n    hud.append(playerHUD, dialogueBox, moveMenu, enemyHUD);\n\n    // append the hud to its container\n    hudContainer.append(hud);\n    this.updateCharacterHUD(this.player);\n    this.updateCharacterHUD(this.enemy);\n  }\n  destroy() {\n    const hudContainer = document.querySelector(\".hud-container\");\n    hudContainer.innerHTML = \"\";\n  }\n\n  // helper function\n  createElement(tag) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const element = document.createElement(tag);\n    Object.entries(options).forEach(_ref => {\n      let [key, value] = _ref;\n      return element[key] = value;\n    });\n    return element;\n  }\n\n  // team HUD tings. rectangles 1 and 4\n  createTeamHUD(team) {\n    const HUD = this.createElement(\"div\", {\n      id: `${team}-hud`,\n      className: \"HUD-display-flex\"\n    });\n    // create a special info div for just the 4 below elements\n    const teamInfoBox = this.createElement(\"div\", {\n      className: `${team}-info-box`\n    });\n    HUD.append(this.createElement(\"img\", {\n      src: `assets/UI-art/${team}-hud.png`\n    }));\n    teamInfoBox.append(this.createElement(\"div\", {\n      className: `${team}-hp-border`\n    }), this.createElement(\"div\", {\n      className: `${team}-hp`\n    }),\n    // put text into this div with innerText = hp\n    this.createElement(\"p\", {\n      className: `${team}-hp-num`\n    }), this.createElement(\"p\", {\n      className: `${team}-name`\n    }));\n    HUD.append(teamInfoBox); // Append teamInfoBox to HUD\n\n    return HUD;\n  }\n  updateCharacterHUD(character) {\n    // setting the name\n    const characterName = document.querySelector(`.${character.team}-name`);\n    characterName.innerText = character.name;\n\n    // saving start HP as the max HP if its not already there\n    // the question is when does this var get reassigned? after the animation is done!\n\n    // if there isnt a startHP var\n    if (character.team == \"player\") {\n      if (!this.startHPPlayer) {\n        this.startHPPlayer = character.maxHP;\n      }\n      this.finishHPPlayer = character.currentHP;\n      if (this.finishHPPlayer < 0) {\n        this.finishHPPlayer = 0;\n      }\n    } else if (character.team == \"enemy\") {\n      if (!this.startHPEnemy) {\n        this.startHPEnemy = character.maxHP;\n      }\n      this.finishHPEnemy = character.currentHP;\n      if (this.finishHPEnemy < 0) {\n        this.finishHPEnemy = 0;\n      }\n    }\n    this.animateHPThings(character).then(() => {\n      // after animating the hp things, set the starthp to be the finishhp for the next time theres a characterHUD update\n      if (character.team == \"player\") {\n        this.startHPPlayer = this.finishHPPlayer;\n      } else if (character.team == \"enemy\") {\n        this.startHPEnemy = this.finishHPEnemy;\n      }\n    });\n  }\n  animateHPThings(character) {\n    return new Promise((resolve, reject) => {\n      try {\n        if (character.team == \"player\") {\n          this.animateHPNum(character, this.startHPPlayer, this.finishHPPlayer);\n          this.animateHPBar(character, this.startHPPlayer, this.finishHPPlayer);\n        } else if (character.team == \"enemy\") {\n          this.animateHPNum(character, this.startHPEnemy, this.finishHPEnemy);\n          this.animateHPBar(character, this.startHPEnemy, this.finishHPEnemy);\n        }\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  animateHPNum(character, startHP, finishHP) {\n    // animate the hp num\n    const hpNum = document.querySelector(`.${character.team}-hp-num`);\n\n    // if the hp num is not the same as the finishHP, then animate it\n    if (startHP != finishHP) {\n      let interval = setInterval(() => {\n        if (startHP > finishHP) {\n          startHP -= 1;\n          hpNum.innerText = startHP;\n        } else if (startHP < finishHP) {\n          startHP += 1;\n          hpNum.innerText = startHP;\n        } else {\n          clearInterval(interval);\n        }\n      }, 20);\n    } else {\n      hpNum.innerText = finishHP;\n    }\n  }\n  animateHPBar(character, startHP, finishHP) {\n    // animate the hp bar\n    const hpBar = document.querySelector(`.${character.team}-hp`);\n\n    // if the hp bar is not the same as the finishHP, then animate it\n    if (startHP != finishHP) {\n      let interval = setInterval(() => {\n        if (startHP > finishHP) {\n          startHP -= 1;\n          hpBar.style.width = `${startHP / character.maxHP * this.InitialHPWidth}px`;\n        } else if (startHP < finishHP) {\n          startHP += 1;\n          hpBar.style.width = `${startHP / character.maxHP * this.InitialHPWidth}px`;\n        } else {\n          clearInterval(interval);\n        }\n      }, 20);\n    } else {\n      hpBar.style.width = `${finishHP / character.maxHP * this.InitialHPWidth}px`;\n    }\n  }\n\n  // rectangle 2\n  createDialogueBox() {\n    const dialogueBox = this.createElement(\"div\", {\n      className: \"dialogue\"\n    });\n    const text = this.createElement(\"p\", {\n      id: \"dialogue-text\",\n      innerText: \"Choose a move!\"\n    });\n    const image = this.createElement(\"img\", {\n      id: \"dialogue-img\",\n      src: \"assets/UI-art/basic container.png\"\n    });\n    dialogueBox.append(text, image);\n    return dialogueBox;\n  }\n\n  // rectangle 3 + moves\n  createMoveMenu() {\n    const moveMenu = this.createElement(\"div\", {\n      className: \"mini-menu\"\n    });\n    const fightButton = this.createElement(\"button\", {\n      id: \"fight-button\",\n      innerText: \"Fight\"\n    });\n    moveMenu.appendChild(fightButton);\n    this.createMoveButtons(moveMenu, fightButton);\n    return moveMenu;\n  }\n  createMoveButtons(moveMenu, fightButton) {\n    // make the fight choices go: light gray, gray, dark gray, light green\n    const colors = [\"#D3D3D3\", \"#A9A9A9\", \"#696969\", \"#90EE90\"];\n    const moves = this.player.moves;\n    for (let i = 1; i <= 4; i++) {\n      const choice = this.createElement(\"button\", {\n        id: `fight${i}`,\n        className: `fight-choice fight-choice-color${i}`,\n        innerText: moves[i - 1].name\n      });\n      const tooltip = this.createElement(\"div\", {\n        className: \"tooltip\",\n        innerText: \"\"\n      });\n      choice.appendChild(tooltip);\n      moveMenu.appendChild(choice);\n      choice.style.display = \"none\";\n      choice.addEventListener(\"click\", () => {\n        // Hide the tooltip\n        tooltip.style.display = \"none\";\n        this.battle.playerChoose(choice);\n      });\n\n      // Add a hover effect for each choice that shows a tooltip with the move's damage and accuracy\n      choice.addEventListener(\"mouseover\", () => {\n        // Check if the button is disabled\n        if (choice.disabled) {\n          return;\n        }\n\n        // Get the move information\n        const move = this.player.moves[i - 1];\n        if (move) {\n          let moveInfo;\n          if (move.isHeal) {\n            moveInfo = `Healing: ${move.value} Accuracy: ${move.accuracy}`;\n          } else {\n            moveInfo = `Damage: ${move.value} Accuracy: ${move.accuracy}`;\n          }\n\n          // Set the tooltip innerText with the move info\n          tooltip.innerText = moveInfo;\n\n          // Show the tooltip\n          tooltip.style.display = \"block\";\n\n          // Constantly update the tooltip if the mouse moves\n          choice.addEventListener(\"mousemove\", () => {\n            // Check if the button is disabled\n            if (choice.disabled) {\n              // Hide the tooltip\n              tooltip.style.display = \"none\";\n            } else {\n              // Show the tooltip\n              tooltip.style.display = \"block\";\n            }\n          });\n        }\n      });\n      choice.addEventListener(\"mouseout\", () => {\n        // Check if the button is disabled\n        if (choice.disabled) {\n          return;\n        }\n\n        // Hide the tooltip\n        tooltip.style.display = \"none\";\n      });\n    }\n    fightButton.addEventListener(\"click\", () => {\n      fightButton.style.display = \"none\";\n      moveMenu.style.flexWrap = \"wrap\";\n      moveMenu.querySelectorAll(\".fight-choice\").forEach(choice => choice.style.display = \"block\");\n    });\n  }\n  updateAttackButtons() {\n    const moves = this.player.moves;\n    moves.forEach((move, index) => {\n      move.innerText = this.player.moves[index].name;\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/battleHUD.js\n");

/***/ }),

/***/ "./src/scripts/battleLogic.js":
/*!************************************!*\
  !*** ./src/scripts/battleLogic.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BattleLogic; }\n/* harmony export */ });\n/* harmony import */ var _battleHUD_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./battleHUD.js */ \"./src/scripts/battleHUD.js\");\n// handle the raw game logic\n\n\n// should only pertain to pure battle logic\n// controls the battleHUD\n\nclass BattleLogic {\n  constructor(battleMaker, player, enemy) {\n    this.battleMaker = battleMaker;\n    this.player = player;\n    this.enemy = enemy;\n    this.battleState = \"Start\";\n    this.dialogueDelay = 1000;\n  }\n\n  // init and destroy\n  init() {\n    // healing the player and enemy to full\n    this.player.healToFull();\n    this.enemy.healToFull();\n    this.battleHUD = new _battleHUD_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.battleHUD.init();\n    this.initializeElements();\n  }\n  initializeElements() {\n    this.fightChoices = document.querySelectorAll(\".fight-choice\");\n    this.dialogue = document.getElementById(\"dialogue-text\");\n  }\n  onFightButton() {\n    this.playerTurn();\n  }\n  playerTurn() {\n    this.battleState = \"PlayerTurn\";\n    this.dialogue.innerText = \"Choose a move!\";\n    this.enableButtons();\n  }\n  enemyTurn() {\n    this.battleState = \"EnemyTurn\";\n    this.dialogue.innerText = `${this.enemy.name} is thinking...`;\n    this.disableButtons();\n    this.enemyChoose();\n  }\n  disableButtons() {\n    this.fightChoices.forEach(choice => choice.disabled = true);\n  }\n  enableButtons() {\n    this.fightChoices.forEach(choice => choice.disabled = false);\n  }\n  makeMove(character, move) {\n    setTimeout(() => {\n      if (move.isHeal) {\n        this.heal(character, move.value);\n      } else {\n        if (character === this.player) {\n          this.attack(this.player, this.enemy, move, this.battleMaker.animateAttack);\n        } else {\n          this.attack(this.enemy, this.player, move, this.battleMaker.animateAttack);\n        }\n      }\n    }, this.dialogueDelay);\n  }\n  playerChoose(choice) {\n    this.disableButtons();\n    const playerMove = this.player.moves[choice.id.slice(-1) - 1];\n    this.dialogue.innerText = `${this.player.name} used ${playerMove.name}!`;\n\n    // insert\n    this.makeMove(this.player, playerMove);\n  }\n  enemyChoose() {\n    let enemyMoves = [this.enemy.move1, this.enemy.move2, this.enemy.move3, this.enemy.move4];\n\n    // Filter out healing move if HP is full\n    enemyMoves = enemyMoves.filter(move => !(move.isHeal && this.enemy.hp === this.enemy.maxHp));\n    let randomMove = enemyMoves[Math.floor(Math.random() * enemyMoves.length)];\n    this.dialogue.innerText = `${this.enemy.name} used ${randomMove.name}!`;\n\n    // insert\n    this.makeMove(this.enemy, randomMove);\n  }\n  attack(attacker, defender, move, animateFunction) {\n    // if the attack misses\n    if (Math.random() * 100 > move.accuracy) {\n      this.dialogue.innerText = \"The attack missed!\";\n      this.battleState = attacker === this.player ? \"EnemyTurn\" : \"PlayerTurn\";\n      setTimeout(() => {\n        attacker === this.player ? this.enemyTurn() : this.playerTurn();\n        if (attacker === this.player) {\n          this.enemyChoose();\n        }\n      }, this.dialogueDelay);\n      return;\n    } else {\n      // if the attack hits\n      animateFunction(attacker.team);\n      defender.takeDamage(Math.floor(move.value));\n      let isDead = defender.isDead();\n      this.battleHUD.updateCharacterHUD(defender);\n      if (isDead) {\n        // if the defender is dead\n        this.battleState = attacker === this.player ? \"PlayerWin\" : \"EnemyWin\";\n        this.dialogue.innerText = `${defender.name} fainted!`;\n        setTimeout(() => {\n          this.endBattle();\n        }, this.dialogueDelay);\n      } else {\n        // if the defender lives\n        this.battleState = attacker === this.player ? \"EnemyTurn\" : \"PlayerTurn\";\n        this.dialogue.innerText = `${defender.name} is hurt!`;\n        setTimeout(() => {\n          if (attacker === this.player) {\n            this.enemyTurn();\n          } else {\n            this.playerTurn();\n          }\n        }, this.dialogueDelay);\n      }\n    }\n  }\n  heal(character, value) {\n    character.takeHealing(Math.floor(value));\n    this.battleHUD.updateCharacterHUD(character);\n    this.dialogue.innerText = `${character.name} is healed!`;\n    this.battleState = character === this.player ? \"EnemyTurn\" : \"PlayerTurn\";\n    setTimeout(() => {\n      character === this.player ? this.enemyTurn() : this.playerTurn();\n    }, this.dialogueDelay);\n  }\n  endBattle() {\n    const winTime = 4000;\n    const loseTime = 4000;\n    if (this.battleState === \"PlayerWin\") {\n      this.dialogue.innerText = \"You won!\";\n      setTimeout(() => {\n        this.battleMaker.puppeteer.playNextScene();\n        this.battleHUD.destroy();\n      }, winTime);\n      // clear the interval\n    } else if (this.battleState === \"EnemyWin\") {\n      this.dialogue.innerText = \"You lost!\";\n      setTimeout(() => {\n        this.battleMaker.puppeteer.resetGame();\n        this.battleHUD.destroy();\n      }, loseTime);\n      // clear the interval\n    }\n\n    this.disableButtons(); // Add this line to disable buttons when the battle ends\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/battleLogic.js\n");

/***/ }),

/***/ "./src/scripts/battleMaker.js":
/*!************************************!*\
  !*** ./src/scripts/battleMaker.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BattleMaker; }\n/* harmony export */ });\n/* harmony import */ var _battleLogic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./battleLogic.js */ \"./src/scripts/battleLogic.js\");\n// makes each battle visual\n\n// makes a new battle\n\n\nclass BattleMaker {\n  constructor(puppeteer, sceneArt, sceneMusic, player, enemy) {\n    this.puppeteer = puppeteer;\n    this.sceneArt = sceneArt;\n    this.sceneMusic = sceneMusic;\n    this.player = player;\n    this.enemy = enemy;\n    this.gameContainer = this.puppeteer.element;\n    this.canvas = this.puppeteer.canvas;\n    this.context = this.puppeteer.context;\n    this.battleScreenArt = new Image();\n    this.battleScreenArt.src = this.sceneArt;\n    function createCanvasAndContext(container, className) {\n      const canvas = document.createElement(\"canvas\");\n      canvas.classList.add(className);\n      canvas.width = container.offsetWidth / 2;\n      canvas.height = container.offsetHeight;\n      const context = canvas.getContext(\"2d\");\n      context.imageSmoothingEnabled = false;\n      canvas.style.position = \"relative\";\n      container.appendChild(canvas);\n      return {\n        canvas,\n        context\n      };\n    }\n    const {\n      canvas: playerCanvas,\n      context: playerContext\n    } = createCanvasAndContext(this.gameContainer, \"player-canvas\");\n    const {\n      canvas: enemyCanvas,\n      context: enemyContext\n    } = createCanvasAndContext(this.gameContainer, \"enemy-canvas\");\n    this.playerCanvas = playerCanvas;\n    this.playerContext = playerContext;\n    this.enemyCanvas = enemyCanvas;\n    this.enemyContext = enemyContext;\n    this.playerCanvasVariables = this.player.canvasVariables;\n    this.enemyCanvasVariables = this.enemy.canvasVariables;\n    this.playerImages = [];\n    this.enemyImages = [];\n    this.playerframeCount = 0;\n    this.enemyframeCount = 0;\n  }\n  init() {\n    this.playSceneMusic();\n    this.battle = new _battleLogic_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, this.player, this.enemy).init();\n    this.menu = document.querySelector(\".HUD\");\n    this.menu.style.display = \"flex\";\n    this.battleScreenArt.onload = () => {\n      this.context.drawImage(this.battleScreenArt, 0, 0, this.canvas.width, this.canvas.height);\n      this.playerImages = this.sliceSpriteSheet(this.playerCanvasVariables);\n      this.enemyImages = this.sliceSpriteSheet(this.enemyCanvasVariables);\n      this.animateCombatants();\n    };\n  }\n  playSceneMusic() {\n    if (!this.puppeteer.audio) {\n      this.puppeteer.createAudio();\n    }\n    if (this.puppeteer.audio) {\n      this.puppeteer.audio.src = this.sceneMusic;\n      this.puppeteer.audio.load(); // Load the new source\n      this.puppeteer.audio.play(); // Play the audio\n    }\n  }\n\n  sliceSpriteSheet(canvasVariables) {\n    const {\n      spriteSheet,\n      srcX,\n      srcY,\n      destX,\n      destY,\n      width,\n      height,\n      frameCount,\n      scaling\n    } = canvasVariables;\n    const characterImages = [];\n    for (let i = 0; i < frameCount; i++) {\n      const frameSrcX = srcX + i * width;\n      characterImages.push({\n        spriteSheet,\n        srcX: frameSrcX,\n        srcY,\n        srcWidth: width,\n        srcHeight: height,\n        destX: destX,\n        destY: destY,\n        destWidth: width * scaling,\n        destHeight: height * scaling\n      });\n    }\n    return characterImages;\n  }\n  drawCharacter(team, context, canvas) {\n    let frame;\n    if (team === \"player\") {\n      frame = this.playerImages[this.playerframeCount % this.playerImages.length];\n    } else if (team === \"enemy\") {\n      frame = this.enemyImages[this.enemyframeCount % this.enemyImages.length];\n    }\n    let {\n      spriteSheet,\n      srcX,\n      srcY,\n      srcWidth,\n      srcHeight,\n      destX,\n      destY,\n      destWidth,\n      destHeight\n    } = frame;\n\n    // if (destX > canvas.width) {\n    // \tdestX = canvas.width;\n    // }\n\n    // if (destY > canvas.height) {\n    // \tdestY = canvas.height;\n    // }\n\n    // Clear and draw the image on the canvas\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.drawImage(spriteSheet, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight);\n  }\n  animateCombatants() {\n    const milliseconds = 800;\n    const playerFrameSpeed = milliseconds / this.playerImages.length;\n    const enemyFrameSpeed = milliseconds / this.enemyImages.length;\n    this.playerAnimationInterval = setInterval(() => {\n      this.drawCharacter(this.player.team, this.playerContext, this.playerCanvas);\n      this.playerframeCount++;\n    }, playerFrameSpeed);\n    this.enemyAnimationInterval = setInterval(() => {\n      this.drawCharacter(this.enemy.team, this.enemyContext, this.enemyCanvas);\n      this.enemyframeCount++;\n    }, enemyFrameSpeed);\n  }\n\n  // move the character's canvas back and forth to \"animate\" an attack\n  animateAttack = team => {\n    const canvas = team === \"player\" ? this.playerCanvas : this.enemyCanvas;\n    const deltaX = team === \"player\" ? 70 : -70;\n    const originalX = canvas.style.left || \"0px\";\n    const currentX = parseInt(originalX, 10);\n    canvas.style.left = `${currentX + deltaX}px`;\n    setTimeout(() => {\n      canvas.style.left = originalX;\n    }, 300);\n  };\n\n  // remove all the elements that this file made from the DOM\n  destroy() {\n    // Stop animations\n    clearInterval(this.playerAnimationInterval);\n    clearInterval(this.enemyAnimationInterval);\n\n    // Remove menu\n    const menu = document.querySelector(\".HUD\");\n    if (menu) {\n      menu.style.display = \"none\";\n    }\n\n    // Remove playerCanvas and enemyCanvas\n    if (this.playerCanvas && this.playerCanvas.parentNode === this.gameContainer) {\n      this.gameContainer.removeChild(this.playerCanvas);\n    }\n    if (this.enemyCanvas && this.enemyCanvas.parentNode === this.gameContainer) {\n      this.gameContainer.removeChild(this.enemyCanvas);\n    }\n\n    // Clear child nodes from gameContainer\n    while (this.gameContainer.firstChild) {\n      if (this.gameContainer.firstChild.nodeName !== 'CANVAS') {\n        this.gameContainer.removeChild(this.gameContainer.firstChild);\n      } else {\n        break;\n      }\n    }\n\n    // Reset properties\n    this.playerCanvas = null;\n    this.enemyCanvas = null;\n    this.menu = null;\n    this.playerAnimationInterval = null;\n    this.enemyAnimationInterval = null;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/battleMaker.js\n");

/***/ }),

/***/ "./src/scripts/battles.js":
/*!********************************!*\
  !*** ./src/scripts/battles.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Battle1: function() { return /* binding */ Battle1; },\n/* harmony export */   Battle2: function() { return /* binding */ Battle2; },\n/* harmony export */   Battle3: function() { return /* binding */ Battle3; }\n/* harmony export */ });\n/* harmony import */ var _battleMaker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./battleMaker.js */ \"./src/scripts/battleMaker.js\");\n/* harmony import */ var _cast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cast.js */ \"./src/scripts/cast.js\");\n// raw data for all battles\n\n\n\n\n// uses the battle maker to create the first battle, with frank vs draymond, and the specific background and music of the fight\nconst battle1SceneArt = \"assets/background-art/twilight-pond.png\";\nconst battle1SceneMusic = \"music/xDeviruchi - And The Journey Begins .wav\";\nclass Battle1 extends _battleMaker_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, battle1SceneArt, battle1SceneMusic, _cast_js__WEBPACK_IMPORTED_MODULE_1__.Frank, _cast_js__WEBPACK_IMPORTED_MODULE_1__.Draymond);\n  }\n}\nconst battle2SceneArt = \"assets/background-art/night-forest.png\";\nconst battle2SceneMusic = \"music/xDeviruchi - Prepare for Battle! .wav\";\nclass Battle2 extends _battleMaker_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, battle2SceneArt, battle2SceneMusic, _cast_js__WEBPACK_IMPORTED_MODULE_1__.Frank, _cast_js__WEBPACK_IMPORTED_MODULE_1__.Hector);\n  }\n}\nconst battle3SceneArt = \"assets/background-art/cave art.png\";\nconst battle3SceneMusic = \"music/xDeviruchi - Decisive Battle.wav\";\nclass Battle3 extends _battleMaker_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, battle3SceneArt, battle3SceneMusic, _cast_js__WEBPACK_IMPORTED_MODULE_1__.Frank, _cast_js__WEBPACK_IMPORTED_MODULE_1__.Robert);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iYXR0bGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRTJDO0FBQ2lCOztBQUU1RDtBQUNBLE1BQU1LLGVBQWUsR0FBRyx5Q0FBeUM7QUFDakUsTUFBTUMsaUJBQWlCLEdBQUcsZ0RBQWdEO0FBQ25FLE1BQU1DLE9BQU8sU0FBU1AsdURBQVcsQ0FBQztFQUN4Q1EsV0FBV0EsQ0FBQ0MsU0FBUyxFQUFFO0lBQ3RCLEtBQUssQ0FBQ0EsU0FBUyxFQUFFSixlQUFlLEVBQUVDLGlCQUFpQixFQUFFTCwyQ0FBSyxFQUFFQyw4Q0FBUSxDQUFDO0VBQ3RFO0FBQ0Q7QUFFQSxNQUFNUSxlQUFlLEdBQUcsd0NBQXdDO0FBQ2hFLE1BQU1DLGlCQUFpQixHQUFHLDZDQUE2QztBQUNoRSxNQUFNQyxPQUFPLFNBQVNaLHVEQUFXLENBQUM7RUFDeENRLFdBQVdBLENBQUNDLFNBQVMsRUFBRTtJQUN0QixLQUFLLENBQUNBLFNBQVMsRUFBRUMsZUFBZSxFQUFFQyxpQkFBaUIsRUFBRVYsMkNBQUssRUFBRUUsNENBQU0sQ0FBQztFQUNwRTtBQUNEO0FBRUEsTUFBTVUsZUFBZSxHQUFHLG9DQUFvQztBQUM1RCxNQUFNQyxpQkFBaUIsR0FBRyx3Q0FBd0M7QUFDM0QsTUFBTUMsT0FBTyxTQUFTZix1REFBVyxDQUFDO0VBQ3hDUSxXQUFXQSxDQUFDQyxTQUFTLEVBQUU7SUFDdEIsS0FBSyxDQUFDQSxTQUFTLEVBQUVJLGVBQWUsRUFBRUMsaUJBQWlCLEVBQUViLDJDQUFLLEVBQUVHLDRDQUFNLENBQUM7RUFDcEU7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL215dGhpYy1tb3VudGFpbi8uL3NyYy9zY3JpcHRzL2JhdHRsZXMuanM/ODFhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByYXcgZGF0YSBmb3IgYWxsIGJhdHRsZXNcblxuaW1wb3J0IEJhdHRsZU1ha2VyIGZyb20gXCIuL2JhdHRsZU1ha2VyLmpzXCI7XG5pbXBvcnQgeyBGcmFuaywgRHJheW1vbmQsIEhlY3RvciwgUm9iZXJ0IH0gZnJvbSBcIi4vY2FzdC5qc1wiO1xuXG4vLyB1c2VzIHRoZSBiYXR0bGUgbWFrZXIgdG8gY3JlYXRlIHRoZSBmaXJzdCBiYXR0bGUsIHdpdGggZnJhbmsgdnMgZHJheW1vbmQsIGFuZCB0aGUgc3BlY2lmaWMgYmFja2dyb3VuZCBhbmQgbXVzaWMgb2YgdGhlIGZpZ2h0XG5jb25zdCBiYXR0bGUxU2NlbmVBcnQgPSBcImFzc2V0cy9iYWNrZ3JvdW5kLWFydC90d2lsaWdodC1wb25kLnBuZ1wiO1xuY29uc3QgYmF0dGxlMVNjZW5lTXVzaWMgPSBcIm11c2ljL3hEZXZpcnVjaGkgLSBBbmQgVGhlIEpvdXJuZXkgQmVnaW5zIC53YXZcIjtcbmV4cG9ydCBjbGFzcyBCYXR0bGUxIGV4dGVuZHMgQmF0dGxlTWFrZXIge1xuXHRjb25zdHJ1Y3RvcihwdXBwZXRlZXIpIHtcblx0XHRzdXBlcihwdXBwZXRlZXIsIGJhdHRsZTFTY2VuZUFydCwgYmF0dGxlMVNjZW5lTXVzaWMsIEZyYW5rLCBEcmF5bW9uZCk7XG5cdH1cbn1cblxuY29uc3QgYmF0dGxlMlNjZW5lQXJ0ID0gXCJhc3NldHMvYmFja2dyb3VuZC1hcnQvbmlnaHQtZm9yZXN0LnBuZ1wiO1xuY29uc3QgYmF0dGxlMlNjZW5lTXVzaWMgPSBcIm11c2ljL3hEZXZpcnVjaGkgLSBQcmVwYXJlIGZvciBCYXR0bGUhIC53YXZcIjtcbmV4cG9ydCBjbGFzcyBCYXR0bGUyIGV4dGVuZHMgQmF0dGxlTWFrZXIge1xuXHRjb25zdHJ1Y3RvcihwdXBwZXRlZXIpIHtcblx0XHRzdXBlcihwdXBwZXRlZXIsIGJhdHRsZTJTY2VuZUFydCwgYmF0dGxlMlNjZW5lTXVzaWMsIEZyYW5rLCBIZWN0b3IpO1xuXHR9XG59XG5cbmNvbnN0IGJhdHRsZTNTY2VuZUFydCA9IFwiYXNzZXRzL2JhY2tncm91bmQtYXJ0L2NhdmUgYXJ0LnBuZ1wiO1xuY29uc3QgYmF0dGxlM1NjZW5lTXVzaWMgPSBcIm11c2ljL3hEZXZpcnVjaGkgLSBEZWNpc2l2ZSBCYXR0bGUud2F2XCI7XG5leHBvcnQgY2xhc3MgQmF0dGxlMyBleHRlbmRzIEJhdHRsZU1ha2VyIHtcblx0Y29uc3RydWN0b3IocHVwcGV0ZWVyKSB7XG5cdFx0c3VwZXIocHVwcGV0ZWVyLCBiYXR0bGUzU2NlbmVBcnQsIGJhdHRsZTNTY2VuZU11c2ljLCBGcmFuaywgUm9iZXJ0KTtcblx0fVxufVxuIl0sIm5hbWVzIjpbIkJhdHRsZU1ha2VyIiwiRnJhbmsiLCJEcmF5bW9uZCIsIkhlY3RvciIsIlJvYmVydCIsImJhdHRsZTFTY2VuZUFydCIsImJhdHRsZTFTY2VuZU11c2ljIiwiQmF0dGxlMSIsImNvbnN0cnVjdG9yIiwicHVwcGV0ZWVyIiwiYmF0dGxlMlNjZW5lQXJ0IiwiYmF0dGxlMlNjZW5lTXVzaWMiLCJCYXR0bGUyIiwiYmF0dGxlM1NjZW5lQXJ0IiwiYmF0dGxlM1NjZW5lTXVzaWMiLCJCYXR0bGUzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/battles.js\n");

/***/ }),

/***/ "./src/scripts/cast.js":
/*!*****************************!*\
  !*** ./src/scripts/cast.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Draymond: function() { return /* binding */ Draymond; },\n/* harmony export */   Frank: function() { return /* binding */ Frank; },\n/* harmony export */   Hector: function() { return /* binding */ Hector; },\n/* harmony export */   Robert: function() { return /* binding */ Robert; }\n/* harmony export */ });\n/* harmony import */ var _character_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./character.js */ \"./src/scripts/character.js\");\n// raw data for cast of characters in the game\n\n\nconst isTestingMode = false; // or false, depending on whether you want testing mode enabled or not\nconst isHellMode = false; // or false, depending on whether you want hell mode enabled or not\n\n// URLs\nconst fireknightURL = \"assets/character-art/fireknight_idle.png\";\nconst slimeURL = \"assets/character-art/slime_idle.png\";\nconst beholderURL = \"assets/character-art/beholder_idle.png\";\nconst dragonURL = \"assets/character-art/dragon_idle.png\";\n\n// making the image instances\nconst fireKnightSpriteSheet = new Image();\nconst slimeSpriteSheet = new Image();\nconst beholderSpriteSheet = new Image();\nconst dragonSpriteSheet = new Image();\n\n// setting image sources\nfireKnightSpriteSheet.src = fireknightURL;\nslimeSpriteSheet.src = slimeURL;\nbeholderSpriteSheet.src = beholderURL;\ndragonSpriteSheet.src = dragonURL;\n\n// enable cheats:\n// setting enemey stat multipliers .75, 1, 2.5\nlet slimeMultiplier = 0.6;\nlet beholderMultiplier = 1.4;\nlet dragonMultiplier = 2.5;\nif (isTestingMode) {\n  slimeMultiplier = 0.01;\n  beholderMultiplier = 0.01;\n  dragonMultiplier = 0.01;\n}\nif (isHellMode) {\n  slimeMultiplier = 50;\n  beholderMultiplier = 50;\n  dragonMultiplier = 50;\n}\n\n// names\nconst frankName = \"Frank\";\nconst draymondName = \"Draymond\";\nconst hectorName = \"Hector\";\nconst robertName = \"Robert\";\n\n// base stats\nconst health = isTestingMode ? 1000 : 40; // if in testing mode, set health to a high value\nconst firstAttack = Math.ceil(health * 0.1);\nconst secondAttack = Math.ceil(firstAttack * 1.5);\nconst thirdAttack = Math.ceil(firstAttack * 2);\nconst heal = Math.ceil(secondAttack);\n\n// health\nconst frankHealth = health;\nconst draymondHealth = Math.ceil(health * slimeMultiplier);\nconst hectorHealth = Math.ceil(health * beholderMultiplier);\nconst robertHealth = Math.ceil(health * dragonMultiplier);\n\n// teams\nconst frankTeam = \"player\";\nconst draymondTeam = \"enemy\";\nconst hectorTeam = \"enemy\";\nconst robertTeam = \"enemy\";\n\n// moves\nconst frankMoves = [{\n  \"Paper Cut\": [isTestingMode ? 1000 : firstAttack, 100]\n}, {\n  \"Classic Slash\": [isTestingMode ? 1500 : secondAttack, 80]\n}, {\n  \"Fire Slash\": [isTestingMode ? 2000 : thirdAttack, 60]\n}, {\n  \"Drink Potion\": [isTestingMode ? 1500 : heal, 100]\n}];\nconst draymondMoves = [{\n  Tackle: [firstAttack * slimeMultiplier, 100]\n}, {\n  \"Shoot Goop\": [secondAttack * slimeMultiplier, 80]\n}, {\n  \"Gravity Slam\": [thirdAttack * slimeMultiplier, 60]\n}, {\n  \"Drink Goop\": [heal * slimeMultiplier, 100]\n}];\nconst hectorMoves = [{\n  \"Sharp Gaze\": [firstAttack * beholderMultiplier, 100]\n}, {\n  \"Wing Strike\": [secondAttack * beholderMultiplier, 80]\n}, {\n  \"Sink Fangs\": [thirdAttack * beholderMultiplier, 60]\n}, {\n  \"Chew Bugs\": [heal * beholderMultiplier, 100]\n}];\nconst robertMoves = [{\n  \"Wing Gusto\": [firstAttack * dragonMultiplier, 100]\n}, {\n  \"Jagged Tail\": [secondAttack * dragonMultiplier, 80]\n}, {\n  \"Supernova Spit\": [thirdAttack * dragonMultiplier, 60]\n}, {\n  \"Drink the Sun\": [heal * dragonMultiplier, 100]\n}];\n\n// canvas variables\nconst frankCanvasVariables = {\n  spriteSheet: fireKnightSpriteSheet,\n  // where to start\n  srcX: 0,\n  srcY: 0,\n  // where to draw\n  destX: 50,\n  destY: 350,\n  // how big is each slice?\n  width: 64,\n  height: 64,\n  // how manyy slices there are:\n  frameCount: 8,\n  // how to scale the image\n  scaling: 7\n};\nconst draymondCanvasVariables = {\n  spriteSheet: slimeSpriteSheet,\n  // where to start\n  srcX: 0,\n  srcY: 0,\n  // where to draw\n  destX: 200,\n  destY: 200,\n  // how big is each slice?\n  width: 64,\n  height: 64,\n  // how manyy slices there are:\n  frameCount: 5,\n  // how to scale the image\n  scaling: 9\n};\nconst hectorCanvasVariables = {\n  spriteSheet: beholderSpriteSheet,\n  // where to start\n  srcX: 0,\n  srcY: 0,\n  // where to draw\n  destX: -90,\n  destY: 200,\n  // how big is each slice?\n  width: 64,\n  height: 64,\n  // how manyy slices there are:\n  frameCount: 5,\n  // how to scale the image\n  scaling: 9\n};\nconst robertCanvasVariables = {\n  spriteSheet: dragonSpriteSheet,\n  // where to start\n  srcX: 0,\n  srcY: 0,\n  // where to draw\n  destX: -10,\n  destY: 200,\n  // how big is each slice?\n  width: 64,\n  height: 64,\n  // how manyy slices there are:\n  frameCount: 5,\n  // how to scale the image\n  scaling: 9\n};\n\n// exporting the characters\n\nconst Frank = new _character_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](frankName, frankHealth, frankTeam, frankMoves, frankCanvasVariables);\nconst Draymond = new _character_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](draymondName, draymondHealth, draymondTeam, draymondMoves, draymondCanvasVariables);\nconst Hector = new _character_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](hectorName, hectorHealth, hectorTeam, hectorMoves, hectorCanvasVariables);\nconst Robert = new _character_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](robertName, robertHealth, robertTeam, robertMoves, robertCanvasVariables);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/cast.js\n");

/***/ }),

/***/ "./src/scripts/character.js":
/*!**********************************!*\
  !*** ./src/scripts/character.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Character; }\n/* harmony export */ });\n// the character class for battle logic\n\n// be the class for every character\n\nclass Character {\n  constructor(name, health, team, moves, canvasVariables) {\n    this.name = name;\n    this.maxHP = health;\n    this.currentHP = health;\n    this.team = team;\n    this.moves = moves.map(move => ({\n      name: Object.keys(move)[0],\n      value: move[Object.keys(move)[0]][0],\n      accuracy: move[Object.keys(move)[0]][1]\n    }));\n    this.move1 = this.moves[0];\n    this.move2 = this.moves[1];\n    this.move3 = this.moves[2];\n    this.move4 = this.moves[3];\n    this.move4.isHeal = true;\n    this.canvasVariables = canvasVariables;\n    this.attackUpgradeAmount = 5;\n    this.vitalityUpgradeAmount = 20;\n    this.attackUpgradesReceived = 0;\n    this.vitalityUpgradesReceived = 0;\n  }\n  receiveAttackUpgrade() {\n    this.moves.forEach(move => {\n      move.value += this.attackUpgradeAmount;\n    });\n    this.attackUpgradesReceived++;\n  }\n  receiveVitalityUpgrade() {\n    this.maxHP += this.vitalityUpgradeAmount;\n    this.currentHP += this.vitalityUpgradeAmount;\n    this.move4.value += this.vitalityUpgradeAmount / 2;\n    this.vitalityUpgradesReceived++;\n  }\n  resetUpgrades() {\n    // for every attack upgrade, subtract the upgrade amount from each move's value\n    for (let i = 0; i < this.attackUpgradesReceived; i++) {\n      this.moves.forEach(move => {\n        move.value -= this.attackUpgradeAmount;\n      });\n    }\n\n    // for every vitality upgrade, subtract the upgrade amount from maxHP and currentHP\n    for (let i = 0; i < this.vitalityUpgradesReceived; i++) {\n      this.maxHP -= this.vitalityUpgradeAmount;\n      this.currentHP -= this.vitalityUpgradeAmount;\n      this.move4.value -= this.vitalityUpgradeAmount / 2;\n    }\n    this.attackUpgradesReceived = 0;\n    this.vitalityUpgradesReceived = 0;\n  }\n  takeDamage(damage) {\n    this.currentHP -= damage;\n  }\n  isDead() {\n    return this.currentHP <= 0;\n  }\n  takeHealing(healing) {\n    this.currentHP = Math.min(this.currentHP + healing, this.maxHP);\n  }\n  healToFull() {\n    this.currentHP = this.maxHP;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jaGFyYWN0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBOztBQUVlLE1BQU1BLFNBQVMsQ0FBQztFQUM5QkMsV0FBV0EsQ0FBQ0MsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxlQUFlLEVBQUU7SUFDdkQsSUFBSSxDQUFDSixJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDSyxLQUFLLEdBQUdKLE1BQU07SUFDbkIsSUFBSSxDQUFDSyxTQUFTLEdBQUdMLE1BQU07SUFDdkIsSUFBSSxDQUFDQyxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxLQUFLLEdBQUdBLEtBQUssQ0FBQ0ksR0FBRyxDQUFFQyxJQUFJLEtBQU07TUFDakNSLElBQUksRUFBRVMsTUFBTSxDQUFDQyxJQUFJLENBQUNGLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUMxQkcsS0FBSyxFQUFFSCxJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDRixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUNwQ0ksUUFBUSxFQUFFSixJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDRixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkMsQ0FBQyxDQUFDLENBQUM7SUFDSCxJQUFJLENBQUNLLEtBQUssR0FBRyxJQUFJLENBQUNWLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDMUIsSUFBSSxDQUFDVyxLQUFLLEdBQUcsSUFBSSxDQUFDWCxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzFCLElBQUksQ0FBQ1ksS0FBSyxHQUFHLElBQUksQ0FBQ1osS0FBSyxDQUFDLENBQUMsQ0FBQztJQUMxQixJQUFJLENBQUNhLEtBQUssR0FBRyxJQUFJLENBQUNiLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDMUIsSUFBSSxDQUFDYSxLQUFLLENBQUNDLE1BQU0sR0FBRyxJQUFJO0lBRXhCLElBQUksQ0FBQ2IsZUFBZSxHQUFHQSxlQUFlO0lBRXRDLElBQUksQ0FBQ2MsbUJBQW1CLEdBQUcsQ0FBQztJQUM1QixJQUFJLENBQUNDLHFCQUFxQixHQUFHLEVBQUU7SUFFL0IsSUFBSSxDQUFDQyxzQkFBc0IsR0FBRyxDQUFDO0lBQy9CLElBQUksQ0FBQ0Msd0JBQXdCLEdBQUcsQ0FBQztFQUNsQztFQUVBQyxvQkFBb0JBLENBQUEsRUFBRztJQUN0QixJQUFJLENBQUNuQixLQUFLLENBQUNvQixPQUFPLENBQUVmLElBQUksSUFBSztNQUM1QkEsSUFBSSxDQUFDRyxLQUFLLElBQUksSUFBSSxDQUFDTyxtQkFBbUI7SUFDdkMsQ0FBQyxDQUFDO0lBRUYsSUFBSSxDQUFDRSxzQkFBc0IsRUFBRTtFQUM5QjtFQUVBSSxzQkFBc0JBLENBQUEsRUFBRztJQUN4QixJQUFJLENBQUNuQixLQUFLLElBQUksSUFBSSxDQUFDYyxxQkFBcUI7SUFDeEMsSUFBSSxDQUFDYixTQUFTLElBQUksSUFBSSxDQUFDYSxxQkFBcUI7SUFDNUMsSUFBSSxDQUFDSCxLQUFLLENBQUNMLEtBQUssSUFBSSxJQUFJLENBQUNRLHFCQUFxQixHQUFHLENBQUM7SUFFbEQsSUFBSSxDQUFDRSx3QkFBd0IsRUFBRTtFQUNoQztFQUVBSSxhQUFhQSxDQUFBLEVBQUc7SUFDZjtJQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLElBQUksQ0FBQ04sc0JBQXNCLEVBQUVNLENBQUMsRUFBRSxFQUFFO01BQ3JELElBQUksQ0FBQ3ZCLEtBQUssQ0FBQ29CLE9BQU8sQ0FBRWYsSUFBSSxJQUFLO1FBQzVCQSxJQUFJLENBQUNHLEtBQUssSUFBSSxJQUFJLENBQUNPLG1CQUFtQjtNQUN2QyxDQUFDLENBQUM7SUFDSDs7SUFFQTtJQUNBLEtBQUssSUFBSVEsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHLElBQUksQ0FBQ0wsd0JBQXdCLEVBQUVLLENBQUMsRUFBRSxFQUFFO01BQ3ZELElBQUksQ0FBQ3JCLEtBQUssSUFBSSxJQUFJLENBQUNjLHFCQUFxQjtNQUN4QyxJQUFJLENBQUNiLFNBQVMsSUFBSSxJQUFJLENBQUNhLHFCQUFxQjtNQUM1QyxJQUFJLENBQUNILEtBQUssQ0FBQ0wsS0FBSyxJQUFJLElBQUksQ0FBQ1EscUJBQXFCLEdBQUcsQ0FBQztJQUNuRDtJQUVBLElBQUksQ0FBQ0Msc0JBQXNCLEdBQUcsQ0FBQztJQUMvQixJQUFJLENBQUNDLHdCQUF3QixHQUFHLENBQUM7RUFDbEM7RUFFQU0sVUFBVUEsQ0FBQ0MsTUFBTSxFQUFFO0lBQ2xCLElBQUksQ0FBQ3RCLFNBQVMsSUFBSXNCLE1BQU07RUFDekI7RUFFQUMsTUFBTUEsQ0FBQSxFQUFHO0lBQ1IsT0FBTyxJQUFJLENBQUN2QixTQUFTLElBQUksQ0FBQztFQUMzQjtFQUVBd0IsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ3BCLElBQUksQ0FBQ3pCLFNBQVMsR0FBRzBCLElBQUksQ0FBQ0MsR0FBRyxDQUFDLElBQUksQ0FBQzNCLFNBQVMsR0FBR3lCLE9BQU8sRUFBRSxJQUFJLENBQUMxQixLQUFLLENBQUM7RUFDaEU7RUFFQTZCLFVBQVVBLENBQUEsRUFBRztJQUNaLElBQUksQ0FBQzVCLFNBQVMsR0FBRyxJQUFJLENBQUNELEtBQUs7RUFDNUI7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL215dGhpYy1tb3VudGFpbi8uL3NyYy9zY3JpcHRzL2NoYXJhY3Rlci5qcz8xODE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRoZSBjaGFyYWN0ZXIgY2xhc3MgZm9yIGJhdHRsZSBsb2dpY1xuXG4vLyBiZSB0aGUgY2xhc3MgZm9yIGV2ZXJ5IGNoYXJhY3RlclxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFyYWN0ZXIge1xuXHRjb25zdHJ1Y3RvcihuYW1lLCBoZWFsdGgsIHRlYW0sIG1vdmVzLCBjYW52YXNWYXJpYWJsZXMpIHtcblx0XHR0aGlzLm5hbWUgPSBuYW1lO1xuXHRcdHRoaXMubWF4SFAgPSBoZWFsdGg7XG5cdFx0dGhpcy5jdXJyZW50SFAgPSBoZWFsdGg7XG5cdFx0dGhpcy50ZWFtID0gdGVhbTtcblx0XHR0aGlzLm1vdmVzID0gbW92ZXMubWFwKChtb3ZlKSA9PiAoe1xuXHRcdFx0bmFtZTogT2JqZWN0LmtleXMobW92ZSlbMF0sXG5cdFx0XHR2YWx1ZTogbW92ZVtPYmplY3Qua2V5cyhtb3ZlKVswXV1bMF0sXG5cdFx0XHRhY2N1cmFjeTogbW92ZVtPYmplY3Qua2V5cyhtb3ZlKVswXV1bMV0sXG5cdFx0fSkpO1xuXHRcdHRoaXMubW92ZTEgPSB0aGlzLm1vdmVzWzBdO1xuXHRcdHRoaXMubW92ZTIgPSB0aGlzLm1vdmVzWzFdO1xuXHRcdHRoaXMubW92ZTMgPSB0aGlzLm1vdmVzWzJdO1xuXHRcdHRoaXMubW92ZTQgPSB0aGlzLm1vdmVzWzNdO1xuXHRcdHRoaXMubW92ZTQuaXNIZWFsID0gdHJ1ZTtcblxuXHRcdHRoaXMuY2FudmFzVmFyaWFibGVzID0gY2FudmFzVmFyaWFibGVzO1xuXG5cdFx0dGhpcy5hdHRhY2tVcGdyYWRlQW1vdW50ID0gNTtcblx0XHR0aGlzLnZpdGFsaXR5VXBncmFkZUFtb3VudCA9IDIwO1xuXG5cdFx0dGhpcy5hdHRhY2tVcGdyYWRlc1JlY2VpdmVkID0gMDtcblx0XHR0aGlzLnZpdGFsaXR5VXBncmFkZXNSZWNlaXZlZCA9IDA7XG5cdH1cblxuXHRyZWNlaXZlQXR0YWNrVXBncmFkZSgpIHtcblx0XHR0aGlzLm1vdmVzLmZvckVhY2goKG1vdmUpID0+IHtcblx0XHRcdG1vdmUudmFsdWUgKz0gdGhpcy5hdHRhY2tVcGdyYWRlQW1vdW50O1xuXHRcdH0pO1xuXG5cdFx0dGhpcy5hdHRhY2tVcGdyYWRlc1JlY2VpdmVkKys7XG5cdH1cblxuXHRyZWNlaXZlVml0YWxpdHlVcGdyYWRlKCkge1xuXHRcdHRoaXMubWF4SFAgKz0gdGhpcy52aXRhbGl0eVVwZ3JhZGVBbW91bnQ7XG5cdFx0dGhpcy5jdXJyZW50SFAgKz0gdGhpcy52aXRhbGl0eVVwZ3JhZGVBbW91bnQ7XG5cdFx0dGhpcy5tb3ZlNC52YWx1ZSArPSB0aGlzLnZpdGFsaXR5VXBncmFkZUFtb3VudCAvIDI7XG5cblx0XHR0aGlzLnZpdGFsaXR5VXBncmFkZXNSZWNlaXZlZCsrO1xuXHR9XG5cblx0cmVzZXRVcGdyYWRlcygpIHtcblx0XHQvLyBmb3IgZXZlcnkgYXR0YWNrIHVwZ3JhZGUsIHN1YnRyYWN0IHRoZSB1cGdyYWRlIGFtb3VudCBmcm9tIGVhY2ggbW92ZSdzIHZhbHVlXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmF0dGFja1VwZ3JhZGVzUmVjZWl2ZWQ7IGkrKykge1xuXHRcdFx0dGhpcy5tb3Zlcy5mb3JFYWNoKChtb3ZlKSA9PiB7XG5cdFx0XHRcdG1vdmUudmFsdWUgLT0gdGhpcy5hdHRhY2tVcGdyYWRlQW1vdW50O1xuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0Ly8gZm9yIGV2ZXJ5IHZpdGFsaXR5IHVwZ3JhZGUsIHN1YnRyYWN0IHRoZSB1cGdyYWRlIGFtb3VudCBmcm9tIG1heEhQIGFuZCBjdXJyZW50SFBcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudml0YWxpdHlVcGdyYWRlc1JlY2VpdmVkOyBpKyspIHtcblx0XHRcdHRoaXMubWF4SFAgLT0gdGhpcy52aXRhbGl0eVVwZ3JhZGVBbW91bnQ7XG5cdFx0XHR0aGlzLmN1cnJlbnRIUCAtPSB0aGlzLnZpdGFsaXR5VXBncmFkZUFtb3VudDtcblx0XHRcdHRoaXMubW92ZTQudmFsdWUgLT0gdGhpcy52aXRhbGl0eVVwZ3JhZGVBbW91bnQgLyAyO1xuXHRcdH1cblxuXHRcdHRoaXMuYXR0YWNrVXBncmFkZXNSZWNlaXZlZCA9IDA7XG5cdFx0dGhpcy52aXRhbGl0eVVwZ3JhZGVzUmVjZWl2ZWQgPSAwO1xuXHR9XG5cblx0dGFrZURhbWFnZShkYW1hZ2UpIHtcblx0XHR0aGlzLmN1cnJlbnRIUCAtPSBkYW1hZ2U7XG5cdH1cblxuXHRpc0RlYWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuY3VycmVudEhQIDw9IDA7XG5cdH1cblxuXHR0YWtlSGVhbGluZyhoZWFsaW5nKSB7XG5cdFx0dGhpcy5jdXJyZW50SFAgPSBNYXRoLm1pbih0aGlzLmN1cnJlbnRIUCArIGhlYWxpbmcsIHRoaXMubWF4SFApO1xuXHR9XG5cblx0aGVhbFRvRnVsbCgpIHtcblx0XHR0aGlzLmN1cnJlbnRIUCA9IHRoaXMubWF4SFA7XG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJDaGFyYWN0ZXIiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJoZWFsdGgiLCJ0ZWFtIiwibW92ZXMiLCJjYW52YXNWYXJpYWJsZXMiLCJtYXhIUCIsImN1cnJlbnRIUCIsIm1hcCIsIm1vdmUiLCJPYmplY3QiLCJrZXlzIiwidmFsdWUiLCJhY2N1cmFjeSIsIm1vdmUxIiwibW92ZTIiLCJtb3ZlMyIsIm1vdmU0IiwiaXNIZWFsIiwiYXR0YWNrVXBncmFkZUFtb3VudCIsInZpdGFsaXR5VXBncmFkZUFtb3VudCIsImF0dGFja1VwZ3JhZGVzUmVjZWl2ZWQiLCJ2aXRhbGl0eVVwZ3JhZGVzUmVjZWl2ZWQiLCJyZWNlaXZlQXR0YWNrVXBncmFkZSIsImZvckVhY2giLCJyZWNlaXZlVml0YWxpdHlVcGdyYWRlIiwicmVzZXRVcGdyYWRlcyIsImkiLCJ0YWtlRGFtYWdlIiwiZGFtYWdlIiwiaXNEZWFkIiwidGFrZUhlYWxpbmciLCJoZWFsaW5nIiwiTWF0aCIsIm1pbiIsImhlYWxUb0Z1bGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/character.js\n");

/***/ }),

/***/ "./src/scripts/puppeteer.js":
/*!**********************************!*\
  !*** ./src/scripts/puppeteer.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Puppeteer; }\n/* harmony export */ });\n/* harmony import */ var _scenes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scenes */ \"./src/scripts/scenes.js\");\n/* harmony import */ var _battles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./battles */ \"./src/scripts/battles.js\");\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cast */ \"./src/scripts/cast.js\");\n// puppeteers the game\n\n// importing scenes\n\n\n// importing battles\n\n\n// importing frank\n\nclass Puppeteer {\n  constructor(config) {\n    // some basic setup\n    this.element = config.element;\n    this.canvas = this.element.querySelector(\".game-canvas\");\n    this.canvas.width = this.element.offsetWidth;\n    this.canvas.height = this.element.offsetHeight;\n    this.context = this.canvas.getContext(\"2d\");\n    this.context.imageSmoothingEnabled = false;\n\n    // find menu\n    this.menu = document.querySelector(\".menu\");\n\n    // current screen\n    this.currentScreen = null;\n\n    // mute button handler\n    this.muteButtonHandler = () => {\n      this.buttonClicked = true;\n\n      // if the puppeteer doesnt have audio, make it\n      if (!this.audio) {\n        this.createAudio();\n      }\n\n      // toggle audio mute\n      this.audio.muted = !this.audio.muted;\n\n      // do the conditional\n      if (this.audio.muted) {\n        this.makeMuted();\n      } else {\n        this.makeUnmuted();\n      }\n    };\n  }\n  makeMuted() {\n    // setting up the mute button and making it clickable\n    const button = document.getElementById(\"mute-button\");\n    const icon = button.querySelector(\"i\");\n    icon.classList.remove(\"fa-volume-up\");\n    icon.classList.add(\"fa-volume-mute\");\n  }\n  makeUnmuted() {\n    // setting up the mute button and making it clickable\n    const button = document.getElementById(\"mute-button\");\n    const icon = button.querySelector(\"i\");\n    icon.classList.remove(\"fa-volume-mute\");\n    icon.classList.add(\"fa-volume-up\");\n    icon.style.animation = \"none\"; // Remove flashing effect from the icon\n    icon.style.color = \"white\"; // Set the color of the icon to white\n  }\n\n  init() {\n    this.resetGame();\n    const button = document.getElementById(\"mute-button\");\n    const icon = button.querySelector(\"i\");\n    icon.style.animation = \"flashing 1s infinite\";\n    button.addEventListener(\"click\", this.muteButtonHandler);\n  }\n  createAudio() {\n    if (this.buttonClicked) {\n      // check if audio already exists\n      if (!this.audio) {\n        this.audio = new Audio();\n        this.audio.muted = true;\n        this.audio.loop = true;\n        this.audio.volume = 0.5;\n        this.audio.currentTime = 0;\n        this.audio.src = this.currentScreen.sceneMusic;\n        this.audio.play();\n      } else {\n        // Stop any audio that is currently playing\n        this.audio.pause();\n        this.audio.currentTime = 0;\n      }\n    }\n  }\n\n  // so when the player clicks the mute button the first time, the audio object should be made. from then on, any scene or battle that comes into play should switch the source of that audio tag and reset the time. the mute button should then only toggle mute\n\n  playScreen(newScreen) {\n    if (this.currentScreen) {\n      // destroy the old screen\n      this.currentScreen.destroy();\n    }\n    // assign a new screen\n    this.currentScreen = new newScreen(this);\n\n    // start the new screen\n    this.currentScreen.init();\n  }\n\n  // handles logic of what screen to change to depending on the state of the game\n  playNextScene() {\n    // i want it so that the game starts on the startscreen,\n    // then alternates between cutscene and battle\n    // a condition is that if the player loses a battle, they go back to the start screen and dont need to see the cutscene again\n    // so i need to keep track of which cutscenes and battles have been completed\n    // and i need to keep track of which cutscene and battle is currently in progress\n    // and i need to keep track of whether the player has lost a battle\n    // and i need to keep track of which screen is currently being displayed\n    // also when the player beats the game and gets past the final cutscene, the game resets and all cutscenes are able to be seen again\n\n    // a question is in which order do i have my conditional tree?\n    // what are all the conditions?\n    // if the player has completed a cutscene\n    // if the player has completed a battle\n    // if the player has lost a battle\n    // if the player has won a battle\n    // if the player has completed the game\n    // if the player has completed all cutscenes\n    // if the player has completed all battles\n\n    // If the player has just lost a battle, they should go back to the start screen\n    if (this.lostBattle) {\n      this.playScreen(_scenes__WEBPACK_IMPORTED_MODULE_0__.StartScreen);\n      this.lostBattle = false; // Reset the lostBattle flag for the next round\n      return;\n    }\n\n    // If the game is just starting from the StartScreen, go to the first cutscene\n    if (this.currentScreen instanceof _scenes__WEBPACK_IMPORTED_MODULE_0__.StartScreen) {\n      if (this.cutsceneList.length > 0) {\n        const nextScene = this.cutsceneList.shift();\n        this.playScreen(nextScene);\n        return;\n      }\n    }\n\n    // If a cutscene was just completed (which means the current screen is not a battle)\n    if (this.battleInProgress === null) {\n      // If there are battles left, start the next battle\n      if (this.battleList.length > 0) {\n        this.battleInProgress = this.battleList.shift();\n        this.playScreen(this.battleInProgress);\n      } else {\n        this.resetGame();\n        return;\n      }\n    } else {\n      // If a battle was just won (which means the current screen is not a cutscene)\n      // If there are cutscenes left, start the next cutscene\n      if (this.cutsceneList.length > 0) {\n        const nextScene = this.cutsceneList.shift();\n        this.playScreen(nextScene);\n        this.battleInProgress = null; // Reset the battleInProgress flag for the next round\n      }\n      // If there are no cutscenes left, the game is completed and should be reset\n      else {\n        this.resetGame();\n        return;\n      }\n    }\n  }\n  getFreshCutscenesList() {\n    return [_scenes__WEBPACK_IMPORTED_MODULE_0__.Cutscene1, _scenes__WEBPACK_IMPORTED_MODULE_0__.Cutscene2, _scenes__WEBPACK_IMPORTED_MODULE_0__.Cutscene3, _scenes__WEBPACK_IMPORTED_MODULE_0__.Cutscene4];\n  }\n  getFreshBattleList() {\n    return [_battles__WEBPACK_IMPORTED_MODULE_1__.Battle1, _battles__WEBPACK_IMPORTED_MODULE_1__.Battle2, _battles__WEBPACK_IMPORTED_MODULE_1__.Battle3];\n  }\n  resetGame() {\n    _cast__WEBPACK_IMPORTED_MODULE_2__.Frank.resetUpgrades();\n    this.cutsceneList = this.getFreshCutscenesList();\n    this.battleList = this.getFreshBattleList();\n    this.completedCutscenes = [];\n    this.completedBattles = [];\n    this.battleInProgress = null;\n    this.lostBattle = false;\n    this.playScreen(_scenes__WEBPACK_IMPORTED_MODULE_0__.StartScreen);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/puppeteer.js\n");

/***/ }),

/***/ "./src/scripts/sceneMaker.js":
/*!***********************************!*\
  !*** ./src/scripts/sceneMaker.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SceneMaker; }\n/* harmony export */ });\n/* harmony import */ var _cast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cast */ \"./src/scripts/cast.js\");\n// makes each scene\n\n// whats the problem? when i try to play the game again, the second time a cutscene is initialized, variables go undefined and the game crashes\n\n\nclass SceneMaker {\n  constructor(puppeteer, sceneArt, sceneMusic, textContent, mode, upgrade) {\n    this.puppeteer = puppeteer;\n    this.sceneArt = sceneArt;\n    this.sceneMusic = sceneMusic;\n    this.textContent = textContent;\n    this.mode = mode;\n    this.upgrade = upgrade;\n    this.gameContainer = this.puppeteer.element;\n    this.canvas = this.puppeteer.canvas;\n    this.context = this.puppeteer.context;\n    this.textFrame = null;\n    this.upgradesPresent = false;\n\n    // event handlers:\n    this.startButtonClickHandler = () => {\n      this.gameContainer.removeChild(this.startButton);\n      this.puppeteer.playNextScene();\n    };\n\n    // so the conditional creation of the audio object is working, but i need the src to change when a new scene or battle is initialized\n\n    this.textFrameClickHandler = () => {\n      // If the current sentence is being gradually displayed\n      if (this.textInterval) {\n        // Clear the existing interval\n        clearInterval(this.textInterval);\n        this.textInterval = null;\n\n        // Display the full sentence immediately\n        this.dialogueText.innerHTML = this.currentSentence;\n\n        // Clear sentenceArray\n        this.sentenceArray = [];\n      } else if (this.sentences.length > 0) {\n        this.graduallyDisplaySentence();\n      } else {\n        // check if there are upgrades to be given\n        if (this.upgrade) {\n          this.createUpgradeButtons();\n        } else {\n          this.puppeteer.playNextScene();\n        }\n      }\n    };\n    this.attackUpgradeClickHandler = () => {\n      _cast__WEBPACK_IMPORTED_MODULE_0__.Frank.receiveAttackUpgrade();\n      this.puppeteer.playNextScene();\n    };\n    this.healthUpgradeClickHandler = () => {\n      _cast__WEBPACK_IMPORTED_MODULE_0__.Frank.receiveVitalityUpgrade();\n      this.puppeteer.playNextScene();\n    };\n  }\n  init() {\n    this.playSceneMusic();\n\n    // create scene art\n    this.sceneArtImage = new Image();\n    this.sceneArtImage.src = this.sceneArt;\n    this.drawArt(this.sceneArtImage);\n\n    // Initialize this.sentences here\n    this.sentences = [...this.textContent];\n    if (this.mode === \"start\") {\n      this.createStartButton();\n    } else if (this.mode === \"scene\") {\n      this.createTextFrame();\n    }\n  }\n  playSceneMusic() {\n    if (!this.puppeteer.audio) {\n      this.puppeteer.createAudio();\n    }\n    if (this.puppeteer.audio) {\n      this.puppeteer.audio.src = this.sceneMusic;\n      this.puppeteer.audio.load(); // Load the new source\n      this.puppeteer.audio.play(); // Play the audio\n    }\n  }\n\n  drawArt(sceneArtImage) {\n    // draw the art on canvas\n    sceneArtImage.onload = () => {\n      this.context.drawImage(sceneArtImage, 0, 0, this.canvas.width, this.canvas.height);\n    };\n  }\n  createStartButton() {\n    this.startButton = document.createElement(\"button\");\n    this.startButton.classList.add(\"start-button\");\n    this.gameContainer.appendChild(this.startButton);\n    this.startButton.addEventListener(\"click\", this.startButtonClickHandler);\n  }\n  graduallyDisplaySentence() {\n    this.currentSentence = this.sentences.shift();\n    this.sentenceArray = this.currentSentence.split(\"\");\n    this.textDisplay = \"\";\n    this.textSpeed = 25; // speed at which text will be displayed\n\n    this.textInterval = setInterval(() => {\n      if (this.sentenceArray.length > 0) {\n        let nextChar = this.sentenceArray.shift();\n        this.textDisplay += nextChar;\n        this.dialogueText.innerHTML = this.textDisplay;\n      } else {\n        clearInterval(this.textInterval);\n        this.textInterval = null;\n      }\n    }, this.textSpeed);\n  }\n  createTextFrame() {\n    // create elements\n    this.textFrame = document.createElement(\"div\");\n    const profilePic = document.createElement(\"img\");\n    profilePic.src = \"assets/character-art/fire_knight.png\";\n    this.dialogueText = document.createElement(\"p\");\n\n    // add classes to them for styling\n    this.textFrame.classList.add(\"text-frame\");\n    profilePic.classList.add(\"profile-pic\");\n    this.dialogueText.classList.add(\"inner-text\");\n\n    // append them to the game container\n    this.textFrame.appendChild(profilePic);\n    this.textFrame.appendChild(this.dialogueText);\n    this.gameContainer.appendChild(this.textFrame);\n\n    // add the first line of text in a gradual way\n    this.graduallyDisplaySentence();\n\n    // add event listener to text frame and pass in the remaining text\n    this.textFrame.addEventListener(\"click\", this.textFrameClickHandler);\n  }\n  createUpgradeButtons() {\n    // if there already upgrade buttons dont make new ones\n\n    // make the attack and health buff upgrade buttons\n    if (this.upgrade && !this.upgradesPresent) {\n      // Check if textFrame exists, if not create it\n      if (!this.textFrame) {\n        this.createTextFrame();\n      }\n\n      // create the elements\n      this.upgradeContainer = document.createElement(\"div\");\n      this.attackUpgradeButton = document.createElement(\"button\");\n      this.healthUpgradeButton = document.createElement(\"button\");\n\n      // add classes to them for styling\n      this.upgradeContainer.className = \"upgrade-container\";\n      this.attackUpgradeButton.className = \"attack-upgrade\";\n      this.healthUpgradeButton.className = \"vitality-upgrade\";\n\n      // add text to each attack and health upgrade button\n      this.attackUpgradeButton.innerText = \"Upgrade Attack\";\n      this.healthUpgradeButton.innerText = \"Upgrade Vitality\";\n\n      // finally, make and hookup the attack and health functions to the character.js script\n      this.attackUpgradeButton.addEventListener(\"click\", this.attackUpgradeClickHandler);\n      this.healthUpgradeButton.addEventListener(\"click\", this.healthUpgradeClickHandler);\n\n      // append these buttons to the textframe flex box\n      this.upgradeContainer.append(this.attackUpgradeButton, this.healthUpgradeButton);\n      this.textFrame.append(this.upgradeContainer);\n      this.upgradesPresent = true;\n    }\n  }\n  destroy() {\n    // If the textInterval is still running, clear it\n    if (this.textInterval) {\n      clearInterval(this.textInterval);\n      this.textInterval = null;\n    }\n\n    // Remove event listeners\n    if (this.startButton) {\n      this.startButton.removeEventListener(\"click\", this.startButtonClickHandler);\n    }\n    if (this.textFrame) {\n      this.textFrame.removeEventListener(\"click\", this.textFrameClickHandler);\n    }\n    if (this.attackUpgradeButton) {\n      this.attackUpgradeButton.removeEventListener(\"click\", this.attackUpgradeClickHandler);\n    }\n    if (this.healthUpgradeButton) {\n      this.healthUpgradeButton.removeEventListener(\"click\", this.healthUpgradeClickHandler);\n    }\n\n    // remove all game container children besides the game canvas\n    while (this.gameContainer.firstChild) {\n      if (this.gameContainer.firstChild.nodeName !== 'CANVAS') {\n        this.gameContainer.removeChild(this.gameContainer.firstChild);\n      } else if (this.gameContainer.lastChild.nodeName !== 'CANVAS') {\n        this.gameContainer.removeChild(this.gameContainer.lastChild);\n      } else {\n        break;\n      }\n    }\n\n    // Reset other properties\n    this.startButton = null;\n    this.upgradeContainer = null;\n    this.attackUpgradeButton = null;\n    this.healthUpgradeButton = null;\n    this.upgradesPresent = false;\n    this.textFrame = null;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sceneMaker.js\n");

/***/ }),

/***/ "./src/scripts/scenes.js":
/*!*******************************!*\
  !*** ./src/scripts/scenes.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cutscene1: function() { return /* binding */ Cutscene1; },\n/* harmony export */   Cutscene2: function() { return /* binding */ Cutscene2; },\n/* harmony export */   Cutscene3: function() { return /* binding */ Cutscene3; },\n/* harmony export */   Cutscene4: function() { return /* binding */ Cutscene4; },\n/* harmony export */   StartScreen: function() { return /* binding */ StartScreen; }\n/* harmony export */ });\n/* harmony import */ var _sceneMaker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sceneMaker */ \"./src/scripts/sceneMaker.js\");\n// raw data for all scenes\n\n\n\n// every scene needs: Art, Music, Text Content\nconst startScreenSceneArt = \"assets/background-art/Start Screen.png\";\nconst startScreenSceneMusic = \"music/xDeviruchi - Title Theme .wav\";\nconst startScreenTextContent = \"\";\nconst startScreenMode = \"start\";\nconst startScreenUpgrade = false;\nclass StartScreen extends _sceneMaker__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, startScreenSceneArt, startScreenSceneMusic, startScreenTextContent, startScreenMode, startScreenUpgrade);\n  }\n}\nconst cutscene1sceneArt = \"assets/background-art/mountain village.png\";\nconst cutscene1sceneMusic = \"music/xDeviruchi - Take some rest and eat some food!.wav\";\n// write a story about Frank the fireknight, and his quest to defeat the dragon Robert\nconst cutscene1textContent = [\"Frank is a humble knight from a small village,\", \"driven by a mission to save his home from the fearsome dragon, Robert.\", \"Braving the journey, he embarks on a perilous quest.\", \"His first challenge lies at the foot of the mountain,\", \"in a serene pond, where the cunning slime creature, Draymond, lurks.\", \"he takes in a deep breath, and prepares for battle.\"];\nconst cutscene1mode = \"scene\";\nconst cutscene1upgrade = false;\nclass Cutscene1 extends _sceneMaker__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, cutscene1sceneArt, cutscene1sceneMusic, cutscene1textContent, cutscene1mode, cutscene1upgrade);\n  }\n}\nconst cutscene2sceneArt = \"assets/background-art/night forest 2.png\";\nconst cutscene2sceneMusic = \"music/xDeviruchi - The Icy Cave .wav\";\nconst cutscene2textContent = [\"The sun sets, casting long, ominous shadows over the haunted forest.\", \"Frank stands victorious, but the night brings a new challenge.\", \"Hector, the ever watchful EYE, emerges from the shadows.\", \"Frank must choose between honing his attack skills or fortifying his vitality.\"];\nconst cutscene2mode = \"scene\";\nconst cutscene2upgrade = true;\nclass Cutscene2 extends _sceneMaker__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, cutscene2sceneArt, cutscene2sceneMusic, cutscene2textContent, cutscene2mode, cutscene2upgrade);\n  }\n}\nconst cutscene3sceneArt = \"assets/background-art/cave entrance.png\";\nconst cutscene3sceneMusic = \"music/xDeviruchi - Mysterious Dungeon.wav\";\nconst cutscene3textContent = [\"Hector's defeat was a hard-earned victory.\", \"Frank continues his journey, climbing the treacherous mountain.\", \"Doubts fill his mind, but he musters the courage to enter Robert's lair.\", \"Deep in the cave, he finds Robert.\", \"It's time for the final showdown!\"];\nconst cutscene3mode = \"scene\";\nconst cutscene3upgrade = true;\nclass Cutscene3 extends _sceneMaker__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, cutscene3sceneArt, cutscene3sceneMusic, cutscene3textContent, cutscene3mode, cutscene3upgrade);\n  }\n}\nconst cutscene4sceneArt = \"assets/background-art/the end.png\";\nconst cutscene4sceneMusic = \"music/xDeviruchi - The Final of The Fantasy.wav\";\nconst cutscene4textContent = [\"Frank stands triumphant over the defeated dragon.\", \"He's not just a humble knight anymore; he's a hero.\", \"As he returns to his village, he reflects on his journey.\", \"He's faced his fears, proven his mettle, and saved his home.\", \"His journey has not been in vain.\", \"Frank has become a true knight.\", \"THE END\"];\nconst cutscene4mode = \"scene\";\nconst cutscene4upgrade = false;\nclass Cutscene4 extends _sceneMaker__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(puppeteer) {\n    super(puppeteer, cutscene4sceneArt, cutscene4sceneMusic, cutscene4textContent, cutscene4mode, cutscene4upgrade);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/scenes.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teXRoaWMtbW91bnRhaW4vLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;